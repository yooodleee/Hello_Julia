# 스택 도식

"""
어떤 변수를 어디에서 쓸 수 있는지를 추적하려면 스택 도식(stack digram)을 그리는 것이 종종 유용하다. 스택 도식은 상태 도식처럼
변수들 각각의 값을 표시하고, 추가적으로 그 변수들이 어떤 함수에 속하는지도 표시한다. 각 함수는 틀(frame)로 표시한다. 하나의 틀
은 함수의 이름과 붙어 있는 상자로 구성되어 있고, 상자 안에는 매개변수와 변수가 들어 있다.

여기서 틀은 함수의 호출 순서대로 쌓이는 스택(stack) 모양으로 배열되어 있다. 예시에서 printtwice는 cattwice에서 호출되었고, cattwice는
Main에서 호출되었다. 여기서 Main은 가장 상위에 있는 틀의 특별한 이름이다. 어떤 함수에도 속하지 않은 변수를 만들면 Main에 속하게 된다.

각 매개변수는 해당하는 각 인수와 같은 값을 가리킨다. 그러므로 part1은 line1과 같은 값이고, part2는 line2와, bruce는 concat과 같은 값
이다. 호출된 함수가 실행되는 중간에 오류가 발생하면, 줄리아는 오류가 발생한 함수명을 출력하고, 그 함수를 호출한 함수를 출력하고, 다시 또
그 함수를 호출한 함수를 출력하는 식으로 Main까지 거슬러 올라간다.

예컨대 printtwice 함수에서 concat 변수에 접근하려고 하면, UndefVarError가 발생한다.
"""

# ERROR: UndefVarError: concat not defined
# Stacktrace:
# [1] printtwice at ./REPL[1]:2 [inlined]
# [2] cattwice(::String, ::String) at ./REPL[2]:3

"""
이런 함수의 목록을 스택트레이스(stacktrace)라고 부른다. 스택트레이스는 오류가 발생한 프로그램 파일, 줄 번호, 그 시점에서
실행 중이었던 함수들을 표시한다. 또 오류를 발생시킨 코드도 표시한다. 스택트레이스에 표시되는 함수는 그 순서가 스택 도식과 
반대이다. 현재 실행 중인 함수가 맨 위에 나온다.
"""